basePath: /
definitions:
  model.Client:
    properties:
      document:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.ClientRequest:
    properties:
      document:
        type: string
      email:
        type: string
      id:
        description: ID can be optional in requests for creation
        type: integer
      name:
        type: string
    required:
    - document
    - email
    - name
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.Product:
    properties:
      active:
        type: boolean
      category:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
host: localhost:8080
info:
  contact: {}
  description: API de exemplo com Gin + Swagger
  title: Marketplace SOA API
  version: "1.0"
paths:
  /clients/:
    get:
      description: Retorna todos os clientes cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Client'
            type: array
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Lista todos os clientes
      tags:
      - clients
    post:
      consumes:
      - application/json
      description: Cria um cliente com os dados enviados no corpo da requisição
      parameters:
      - description: Dados do cliente
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/model.ClientRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Client'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Cria um novo cliente
      tags:
      - clients
  /clients/{id}:
    delete:
      description: Remove um cliente do sistema pelo ID
      parameters:
      - description: ID do cliente
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Deleta um cliente
      tags:
      - clients
    get:
      description: Retorna os dados de um cliente específico
      parameters:
      - description: ID do cliente
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Client'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Busca cliente por ID
      tags:
      - clients
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um cliente com base no ID
      parameters:
      - description: ID do cliente
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do cliente
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/model.ClientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Client'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Atualiza um cliente existente
      tags:
      - clients
  /products:
    get:
      description: Retorna todos os produtos cadastrados
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Lista todos os produtos
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Cria um novo produto com os dados fornecidos
      parameters:
      - description: Produto
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/model.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Cria um novo produto
      tags:
      - products
  /products/{id}:
    delete:
      description: Deleta um produto pelo ID
      parameters:
      - description: ID do Produto
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Deleta um produto
      tags:
      - products
    get:
      description: Retorna um produto pelo seu ID
      parameters:
      - description: ID do Produto
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Busca produto pelo ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um produto pelo ID
      parameters:
      - description: ID do Produto
        in: path
        name: id
        required: true
        type: integer
      - description: Produto atualizado
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/model.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Atualiza um produto existente
      tags:
      - products
swagger: "2.0"
